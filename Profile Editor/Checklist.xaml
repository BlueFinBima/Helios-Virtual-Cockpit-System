<Grid x:Class="GadrocsWorkshop.Helios.ProfileEditor.Checklist"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GadrocsWorkshop.Helios.ProfileEditor"
             xmlns:HeliosControls="clr-namespace:GadrocsWorkshop.Helios.Windows.Controls;assembly=Helios"                      
             xmlns:Helios="clr-namespace:GadrocsWorkshop.Helios;assembly=Helios"                      
             mc:Ignorable="d" 
             d:DesignHeight="450" 
             d:DesignWidth="800"
             Background="LightGray">
    <Grid.Resources>
        <Style TargetType="TextBlock">
            <Style.Triggers>
                <Trigger Property="Text" Value="">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Expander">
            <Style.Triggers>
                <Trigger Property="Content" Value="">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <DataTemplate x:Key="expanderHeader">
            <TextBlock Margin="0,6,36,6" Text="{Binding}"/>
        </DataTemplate>

        <Style x:Key="SettingsExpander" TargetType="Expander">
            <Setter Property="HeaderTemplate" Value="{StaticResource expanderHeader}"/>
            <Setter Property="Margin" Value="6,6,0,6"/>
        </Style>

        <Style x:Key="SettingsButton" TargetType="Button">
            <Setter Property="Margin" Value="12,6"/>
            <Setter Property="MaxWidth" Value="120"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        <Style x:Key="FailureVisible" TargetType="{x:Type FrameworkElement}">
            <Setter Property="UIElement.Visibility" Value="Hidden"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Status}" Value="Error"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="UIElement.Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Status}" Value="Warning"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="UIElement.Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FailureExpanded" TargetType="{x:Type Expander}">
            <Setter Property="IsExpanded" Value="False"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Status}" Value="Error"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="IsExpanded" Value="True"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Status}" Value="Warning"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="IsExpanded" Value="True"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="SuccessVisible" TargetType="{x:Type FrameworkElement}">
            <Setter Property="UIElement.Visibility" Value="Hidden"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Status}" Value="Info"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="UIElement.Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Status}" Value="None"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="UIElement.Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </Grid.Resources>
    <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
    </Grid.ColumnDefinitions>
    <ScrollViewer Grid.Row="0" Grid.Column="0">
        <StackPanel>
            <ItemsControl Background="LightGray" Margin="6" ItemsSource="{Binding Sections}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="6" Background="White">
                            <Grid.ColumnDefinitions>
                                <!-- left controls -->
                                <ColumnDefinition Width="60"/>
                                <!-- main text -->
                                <ColumnDefinition Width="*"/>
                                <!-- buttons -->
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="12"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="12"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" Padding="0" FontFamily="Segoe MDL2 Assets" FontSize="36" FontWeight="UltraBold" Foreground="Green" Content="&#xE73E;" Style="{StaticResource SuccessVisible}"/>
                            <Label Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" Padding="0" FontFamily="Segoe MDL2 Assets" FontSize="36" FontWeight="UltraBold" Foreground="Red" Content="&#xE711;" Style="{StaticResource FailureVisible}"/>
                            <TextBlock Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Text="{Binding Name}"/>
                            <Button Margin="6,6,22,6" Grid.Row="1" Grid.Column="2" Content="Go There" Command="local:Checklist.GoThereCommand" CommandParameter="{Binding}" Style="{StaticResource SettingsButton}" Visibility="{Binding GoThereVisibility}"/>
                            <TextBlock Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,0,6" Text="{Binding StatusNarrative}"/>
                            <Expander Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Header="Details" HorizontalAlignment="Stretch" Margin="0,3" ExpandDirection="Down" IsExpanded="False" Visibility="{Binding DetailsVisibility}">
                                <!-- Expander appears very broken if used with a custom Header, so let's not use it -->
                                <Expander.Content>
                                    <ItemsControl ItemsSource="{Binding Items}" Margin="22,0,0,0">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock TextWrapping="Wrap" Margin="3,3,6,0" Text="{Binding TextLine1}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Expander.Content>
                            </Expander>
                            <Expander Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" Header="Recommendations" HorizontalAlignment="Stretch" Margin="0,3" ExpandDirection="Down" Style="{StaticResource FailureExpanded}" Visibility="{Binding RecommendationsVisibility}">
                                <!-- Expander appears very broken if used with a custom Header, so let's not use it -->
                                <Expander.Content>
                                    <ItemsControl ItemsSource="{Binding Recommendations}" Margin="22,0,0,0">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock TextWrapping="Wrap" Margin="3,3,6,0" Text="{Binding}"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Expander.Content>
                            </Expander>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </ScrollViewer>

    <DockPanel Grid.Row="0" Grid.Column="1" Background="White">
        <StackPanel DockPanel.Dock="Top">
            <Expander FontWeight="Bold" Header="Show this View" IsExpanded="False" Style="{StaticResource SettingsExpander}">
                <StackPanel Margin="0,6">
                    <RadioButton GroupName="auto" Margin="6,0,0,0">Always</RadioButton>
                    <RadioButton GroupName="auto" Margin="6,0,0,0" IsChecked="True">For Warnings &amp; Errors</RadioButton>
                    <RadioButton GroupName="auto" Margin="6,0,0,0">For Errors</RadioButton>
                    <RadioButton GroupName="auto" Margin="6,0,0,0">Never</RadioButton>
                </StackPanel>
            </Expander>
        </StackPanel>
        <StackPanel DockPanel.Dock="Top" Margin="0,6,0,0">
            <Expander FontWeight="Bold" Header="Filter Details" IsExpanded="False" Style="{StaticResource SettingsExpander}">
                <StackPanel Margin="0,6">
                    <RadioButton GroupName="details" Margin="6,0,0,0" IsChecked="True">All</RadioButton>
                    <RadioButton GroupName="details" Margin="6,0,0,0">Warnings &amp; Errors</RadioButton>
                    <RadioButton GroupName="details" Margin="6,0,0,0">Only Errors</RadioButton>
                    <RadioButton GroupName="details" Margin="6,0,0,0">None</RadioButton>
                </StackPanel>
            </Expander>
        </StackPanel>
        <StackPanel DockPanel.Dock="Bottom" Margin="0,6,0,0" VerticalAlignment="Bottom">
            <Button Click="Share_Click" Style="{StaticResource SettingsButton}">Share</Button>
            <Button Click="Reload_Click" Style="{StaticResource SettingsButton}">Reload</Button>
        </StackPanel>
    </DockPanel>
</Grid>
